<!-- Footer -->
<footer layout="row" layout-padding layout-margin layout-align="center start">
    <div flex="25">
        <p>
            Data Engineer. <br>
            Software Developer. <br>
            Full Stack Web Engineer.
        </p>

        <div layout="row" layout-align="center center" layout-margin>
            <p><b>Built with</b></p>
            <a href="https://www.php.net/manual/en/intro-whatcando.php" target="_blank">
                <md-button class="cb-btn md-raised md-hue-3">PHP 7.4</md-button>
            </a>
        </div>
    </div>
    <div flex="50">
        <h2 class="cb-text-center cb-mtop-0">
            Julius Alvarado's
            <i> cloud app</i>
            <ng-md-icon icon="cloud" style="fill: skyblue"></ng-md-icon>
        </h2>
        <h4 class="cb-text-center"> &copy; 2020</h4>
        <p style="text-align: center">
            <small>Programming languages are <u>just</u> hammers.</small><br>
            <small>What matters, is <u>who</u> is welding the hammer.</small>
        </p>
    </div>
    <div flex="25">
        <h2 class="cb-mtop-0 hm-pl-18">Contact</h2>
        <a href="/about">
            <md-button class="cb-btn">HackMatch.io</md-button>
        </a>
        <br>
        <a href="mailto:j.alvarado@engineer.com">
            <md-button class="cb-btn">j.alvarado@engineer.com</md-button>
        </a>
        <br>
        <a href="https://github.com/ideaguy3d" target="_blank">
            <md-button class="cb-btn">GitHub</md-button>
        </a>
    </div>
</footer>

<!--------------------------------------------------
------------ Content Delivery Networks ------------
----------------------------------------------------
- 1 -
"https://ajax.googleapis.com/ajax/libs/angularjs/1.7.2/angular.min.js"
"/ui-match/modules/ng.js"

- 2 -
"https://ajax.googleapis.com/ajax/libs/angularjs/1.7.2/angular-animate.min.js"
"/ui-match/modules/ng-animate.js"

- 3 -
"https://ajax.googleapis.com/ajax/libs/angularjs/1.7.2/angular-aria.min.js"
"/ui-match/modules/ng-aria.js"

- 4 -
"https://ajax.googleapis.com/ajax/libs/angularjs/1.7.2/angular-messages.min.js"
"/ui-match/modules/ng-messages.js"

- 5 -
"//cdnjs.cloudflare.com/ajax/libs/angular-material-icons/0.7.1/angular-material-icons.min.js"
"/ui-match/modules/ngmd-icons.js"

- 6 -
"https://ajax.googleapis.com/ajax/libs/angular_material/1.1.9/angular-material.min.js"
"/ui-match/modules/ngmd.js"
-->

<!-- AngularJS Core -->
<script src="/ui-match/modules/ng.js"></script>
<script src="/ui-match/modules/ng-animate.js"></script>
<script src="/ui-match/modules/ng-aria.js"></script>
<script src="/ui-match/modules/ng-messages.js"></script>
<script src="/ui-match/modules/ng-sanitize.js"></script>

<!-- AngularJS Material v1.1.9 -->
<script src="/ui-match/modules/ngmd.js"></script>
<script src="/ui-match/modules/ngmd-icons.js"></script>

<!-- HackMatch.io AngularJS 1.7 app -->
<script src="/ui-match/app.js"></script>

<!-- JuliusPHP code output -->
<script>
    (function () {
        'use strict';
        let app = angular.module('hackMatchCloudApp');
        app.controller('ioCtrl', InputOutputCtrl)
            .controller('arraysCtrl', ArraysCtrl)
            .controller('basicsCtrl', BasicsCtrl)
            .controller('dataCtrl', DataCtrl)
            .controller('errorsCtrl', ErrorsCtrl)
            .controller('functionsCtrl', FunctionsCtrl)
            .controller('oopCtrl', OOPCtrl)
            .controller('jaSecurityCtrl', SecurityCtrl)
            .controller('sqlCtrl', SqlCtrl)
            .controller('stringsCtrl', StringsCtrl)
            .controller('testingCtrl', TestingCtrl)
            .controller('webCtrl', WebCtrl);

        // 90% done
        // topics done, files done, struct done, bindings done
        function InputOutputCtrl($scope, $log) {
            const io_intro = `<?= $io_intro ?? null ?>`;
            const fs_resource = `<?= $io_fs_resource ?? null ?>`;
            const fs_info_op = `<?= $io_fs_info_op ?? null ?>`;
            const io_stream = `<?= $io_stream ?? null ?>`;

            let selected = null;
            let previous = null;
            let tabs = [
                {title: 'Intro - io', content: io_intro},
                {title: 'File System Resource', content: fs_resource},
                {title: 'File Info & Operations', content: fs_info_op},
                {title: 'Streams', content: io_stream},
            ];

            $scope.tabs = tabs;
            $scope.selectedIndex = 0;
            $scope.$watch('selectedIndex', function (newVal, oldVal) {
                previous = selected;
                selected = tabs[newVal];
                if (oldVal + 1 && !angular.equals(oldVal, newVal)) {
                    $log.log('Goodbye ' + previous.title + '!');
                }
                if (newVal + 1 > 0) {
                    $log.log('Hello ' + selected.title + '!');
                }
            });
        }

        // 50% plus done
        // topics done, files done, struct done, bindings done
        function BasicsCtrl($scope) {
            let tabs = [
                {title: 'Fundamentals Intro  ‚úÖ', content: `<?= $bas_basics_intro ?? null ?>`},
                {title: 'C Extensions  üèÉ‚Äç‚ôÇÔ∏è', content: `<?= $bas_extensions ?? null ?>`},
                {title: 'Configuration  ‚úÖ', content: `<?= $bas_configuration ?? null ?>`},
                {title: 'Performance  üèÉ‚Äç‚ôÇÔ∏è', content: `<?= $bas_performance ?? null ?>`},
                {title: 'Operators  ‚úÖ', content: `<?= $bas_operators ?? null ?>`},
                {title: 'Language Constructs  ‚úÖ', content: `<?= $bas_language_constructs ?? null ?>`},
                {title: 'Control Structures ‚ö†', content: `<?= $bas_control_structures ?? null ?>`},
                {title: 'Namespaces  ‚úÖ', content: `<?= $bas_namespaces ?? null ?>`},
                // variables, constants, magic constants, super globals
                {title: 'Identifiers ‚ö†', content: `<?= $bas_identifiers ?? null ?>`},
            ];
            let selected = null;
            let previous = null;

            $scope.tabs = tabs;
            $scope.selectedIndex = 0;
            $scope.$watch('selectedIndex', function (newVal, oldVal) {
                previous = selected;
                selected = tabs[newVal];
                if (oldVal + 1 && !angular.equals(oldVal, newVal)) {
                    $log.log('Goodbye ' + previous.title + '!');
                }
                if (newVal + 1 > 0) {
                    $log.log('Hello ' + selected.title + '!');
                }
            });
        }

        // 50% plus done
        // topics done, files done, struct done, bindings done
        function ArraysCtrl($scope) {
            let tabs = [
                {title: 'Arrays Intro  ‚úÖ', content: `<?= $arr_array_intro ?? null ?>`},
                {title: 'Merge & Compare  ‚úÖ', content: `<?= $arr_merge_compare ?? null ?>`},
                // getting & testing
                {title: 'Key Values  ‚úÖ', content: `<?= $arr_key_values ?? null ?>`},
                {title: 'SPL  üèÉ‚Äç‚ôÇÔ∏è', content: `<?= $arr_spl ?? null ?>`},
                {title: 'Sorting  ‚ö†', content: `<?= $arr_sorting ?? null ?>`},
                // also include SPL
                {title: 'Stack/Queue  ‚úÖ', content: `<?= $arr_stack_queue ?? null ?>`},
                // ?
                {title: 'Looping  ‚úÖ', content: `<?= $arr_looping ?? null ?>`},
                // manipulation e.g. build, split, etc.
                {title: 'Transforms  ‚úÖ', content: `<?= $arr_transforms ?? null ?>`},
                // union, difference, intersects, list op
                {title: 'Array Ops  ‚ö†', content: `<?= $arr_array_ops ?? null ?>`},
            ];
            let selected = null;
            let previous = null;

            $scope.tabs = tabs;
            $scope.selectedIndex = 0;
            $scope.$watch('selectedIndex', function (newVal, oldVal) {
                previous = selected;
                selected = tabs[newVal];
                if (oldVal + 1 && !angular.equals(oldVal, newVal)) {
                    $log.log('Goodbye ' + previous.title + '!');
                }
                if (newVal + 1 > 0) {
                    $log.log('Hello ' + selected.title + '!');
                }
            });
        }

        // 0%
        // topics done, files done, struct done, bindings done
        function DataCtrl($scope, $log) {
            let tabs = [
                {title: 'Data Intro ‚ö†', content: `<?= $dat_data_intro ?? null ?>`},
                {title: 'XML ‚ö†', content: `<?= $dat_xml ?? null ?>`},
                {title: 'SOAP ‚ö†', content: `<?= $dat_soap ?? null ?>`},
                {title: 'JSON ‚ö†', content: `<?= $dat_json ?? null ?>`},
                {title: 'REST ‚ö†', content: `<?= $dat_rest ?? null ?>`},
                {title: 'Data Structures ‚ö†', content: `<?= $dat_data_structures ?? null ?>`},
                {title: 'Date & Time ‚ö†', content: `<?= $dat_date_time ?? null ?>`},
            ];
            let selected = null;
            let previous = null;

            $scope.tabs = tabs;
            $scope.selectedIndex = 0;
            $scope.$watch('selectedIndex', function (newVal, oldVal) {
                previous = selected;
                selected = tabs[newVal];
                if (oldVal + 1 && !angular.equals(oldVal, newVal)) {
                    $log.log('Goodbye ' + previous.title + '!');
                }
                if (newVal + 1 > 0) {
                    $log.log('Hello ' + selected.title + '!');
                }
            });
        }

        // 65%
        // topics done, files done, struct done, bindings done
        function ErrorsCtrl($scope, $log) {
            let tabs = [
                {title: 'Errors Intro ‚úÖ', content: `<?= $err_errors_intro ?? null ?>`},
                {title: 'Exceptions & Errors ‚úÖ', content: `<?= $err_error_types ?? null ?>`},
                {title: 'Configuration ‚úÖ', content: `<?= $err_error_configuration ?? null ?>`},
                {title: 'Error Functions üèÉ‚Äç‚ôÇÔ∏è', content: `<?= $err_error_functions ?? null ?>`},
                {title: 'Custom Errors üèÉ‚Äç‚ôÇÔ∏è', content: `<?= $err_custom_errors ?? null ?>`},
                {title: 'Try/Catch/Finally üèÉ‚Äç‚ôÇÔ∏è', content: `<?= $err_try_catch_finally ?? null ?>`},
                {title: 'Error Class  ‚úÖ', content: `<?= $err_error_class ?? null ?>`},
                {title: 'Exception Class  ‚úÖ', content: `<?= $err_exception_class ?? null ?>`},
                {title: 'Throwable ‚ö†', content: `<?= $err_throwable ?? null ?>`},
            ];
            let selected = null;
            let previous = null;

            $scope.tabs = tabs;
            $scope.selectedIndex = 0;
            $scope.$watch('selectedIndex', function (newVal, oldVal) {
                previous = selected;
                selected = tabs[newVal];
                if (oldVal + 1 && !angular.equals(oldVal, newVal)) {
                    $log.log('Goodbye ' + previous.title + '!');
                }
                if (newVal + 1 > 0) {
                    $log.log('Hello ' + selected.title + '!');
                }
            });
        }

        // 70% ish done
        // topics done, files done, struct done, bindings done
        function FunctionsCtrl($scope, $log) {
            let tabs = [
                {title: 'Functions Intro ‚úÖ', content: `<?= $fp_intro ?? null ?>`},
                // scatter op, optional args, nullable
                {title: 'Parametric Rules ‚úÖ', content: `<?= $fp_parametric_rules ?? null ?>`},
                {title: 'Lambdas & Closures ‚úÖ', content: `<?= $fp_lambdas_closures ?? null ?>`},
                {title: 'Variadic & Dynamic ‚úÖ', content: `<?= $fp_variadic_dynamic ?? null ?>`},
                {title: 'Callable Class ‚úÖ', content: `<?= $fp_callable_class ?? null ?>`},
                {title: 'References ‚ö†', content: `<?= $fp_references ?? null ?>`},
                {title: 'Scope ‚ö†', content: `<?= $fp_scope ?? null ?>`},
            ];
            let selected = null;
            let previous = null;

            $scope.tabs = tabs;
            $scope.selectedIndex = 0;
            $scope.$watch('selectedIndex', function (newVal, oldVal) {
                previous = selected;
                selected = tabs[newVal];
                if (oldVal + 1 && !angular.equals(oldVal, newVal)) {
                    $log.log('Goodbye ' + previous.title + '!');
                }
                if (newVal + 1 > 0) {
                    $log.log('Hello ' + selected.title + '!');
                }
            });
        }

        // 0%
        // topics done, files done, struct done, bindings done
        function OOPCtrl($scope, $log) {
            let tabs = [
                {title: 'OOP Intro ‚ö†', content: `<?= $oop_intro ?? null ?>`},
                {title: 'Reflection ‚ö†', content: `<?= $oop_reflection ?? null ?>`},
                {title: 'Late Static Binding ‚ö†', content: `<?= $oop_late_static_binding ?? null ?>`},
                {title: 'Auto Loading ‚ö†', content: `<?= $oop_auto_loading ?? null ?>`},
                {title: 'Generators ‚ö†', content: `<?= $oop_generators ?? null ?>`},
                {title: 'Anonymous Objects ‚ö†', content: `<?= $oop_anonymous_objects ?? null ?>`},
                {title: 'Traits ‚ö†', content: `<?= $oop_traits ?? null ?>`},
                // Types/Visibility/Construct/Destruct
                {title: 'Basic OOP ‚ö†', content: `<?= $oop_basic_oop ?? null ?>`},
                // Constants/Final/Abstracts/Interfaces
                {title: 'Advanced OOP ‚ö†', content: `<?= $oop_advanced_oop ?? null ?>`},
                {title: 'Inheritance ‚ö†', content: `<?= $oop_inheritance ?? null ?>`},
                {title: 'Loop & Compare ‚ö†', content: `<?= $oop_loop_compare ?? null ?>`},
                {title: 'Magic Methods ‚ö†', content: `<?= $oop_magic_methods ?? null ?>`},
                {title: 'SPL ‚ö†', content: `<?= $oop_spl ?? null ?>`},
                // Exceptions
                {title: 'Try/Catch ‚ö†', content: `<?= $oop_try_catch ?? null ?>`},
            ];

            let selected = null;
            let previous = null;

            $scope.tabs = tabs;
            $scope.selectedIndex = 0;
            $scope.$watch('selectedIndex', function (newVal, oldVal) {
                previous = selected;
                selected = tabs[newVal];
                if (oldVal + 1 && !angular.equals(oldVal, newVal)) {
                    $log.log('Goodbye ' + previous.title + '!');
                }
                if (newVal + 1 > 0) {
                    $log.log('Hello ' + selected.title + '!');
                }
            });
        }

        // 0%
        // topics done, files done, struct done, bindings done
        function SecurityCtrl($scope, $log) {
            let tabs = [
                {title: 'Intro ‚ö†', content: `<?= $sec_security_intro ?? null ?>`},
                {title: 'XSS ‚ö†', content: `<?= $sec_xss ?? null ?>`},
                {title: 'XSRF', content: `<?= $sec_xsrf ?? null ?>`},
                {title: 'Session Security ‚ö†', content: `<?= $sec_session_security ?? null ?>`},
                {title: 'File Upload Security ‚ö†', content: `<?= $sec_file_upload_security ?? null ?>`},
                {title: 'Remote Code Injection ‚ö†', content: `<?= $sec_remote_code_injection ?? null ?>`},
                {title: 'SQL Injection ‚ö†', content: `<?= $sec_sql_injection ?? null ?>`},
                {title: 'Encryption & Hashing ‚ö†', content: `<?= $sec_encryption_hashing ?? null ?>`},
                {title: 'Filter & Escape ‚ö†', content: `<?= $sec_filter_escape ?? null ?>`},
                {title: 'Permissions ‚ö†', content: `<?= $sec_permissions ?? null ?>`},
                {title: 'HTTPS ‚ö†', content: `<?= $sec_https ?? null ?>`}
            ];
            let selected = null;
            let previous = null;

            $scope.tabs = tabs;
            $scope.selectedIndex = 0;
            $scope.$watch('selectedIndex', function (newVal, oldVal) {
                previous = selected;
                selected = tabs[newVal];
                if (oldVal + 1 && !angular.equals(oldVal, newVal)) {
                    $log.log('Goodbye ' + previous.title + '!');
                }
                if (newVal + 1 > 0) {
                    $log.log('Hello ' + selected.title + '!');
                }
            });
        }

        // 0%
        // topics done, files done, struct done, bindings done
        function SqlCtrl($scope, $log) {
            let tabs = [
                {title: 'SQL DB Intro ‚ö†', content: `<?= $sql_db_intro ?? null ?>`},
                {title: 'Keys & Indexes ‚ö†', content: `<?= $sql_keys_indexes ?? null ?>`},
                {title: 'Data Types ‚ö†', content: `<?= $sql_data_types ?? null ?>`},
                {title: 'Joins ‚ö†', content: `<?= $sql_joins ?? null ?>`},
                {title: 'Data Definitions ‚ö†', content: `<?= $sql_data_definitions ?? null ?>`},
                // transactions in PDO & SQL
                {title: 'Transactions ‚ö†', content: `<?= $sql_transactions ?? null ?>`},
                {title: 'Aggregates ‚ö†', content: `<?= $sql_aggregates ?? null ?>`},
                {title: 'Grouping ‚ö†', content: `<?= $sql_grouping ?? null ?>`},
                {title: 'Prepared Statements ‚ö†', content: `<?= $sql_prepared_statements ?? null ?>`},
                {title: 'CRUD OPS ‚ö†', content: `<?= $sql_crud_ops ?? null ?>`},
                {title: 'PDO Fetch Modes ‚ö†', content: `<?= $sql_pdo_fetch_modes ?? null ?>`},
                {title: 'PDO Fetch Methods ‚ö†', content: `<?= $sql_pdo_fetch_methods ?? null ?>`},
            ];
            let selected = null;
            let previous = null;

            $scope.tabs = tabs;
            $scope.selectedIndex = 0;
            $scope.$watch('selectedIndex', function (newVal, oldVal) {
                previous = selected;
                selected = tabs[newVal];
                if (oldVal + 1 && !angular.equals(oldVal, newVal)) {
                    $log.log('Goodbye ' + previous.title + '!');
                }
                if (newVal + 1 > 0) {
                    $log.log('Hello ' + selected.title + '!');
                }
            });
        }

        // 0%
        // topics done, files done, struct done, bindingings done
        function StringsCtrl($scope, $log) {
            let selected = null;
            let previous = null;

            let tabs = [
                {title: 'Strings Intro ‚ö†', content: `<?= $str_string_intro ?? null ?>`},
                {title: 'Regex Engine Basics ‚ö†', content: `<?= $str_regex_engine_basics ?? null ?>`},
                {title: 'Regex Engine Intermediate ‚ö†', content: `<?= $str_regex_engine_intermediate ?? null ?>`},
                {title: 'Regex Engine Advanced ‚ö†', content: `<?= $str_regex_engine_advanced ?? null ?>`},
                // strings to arrays/ds &back
                {title: 'Transforms ‚ö†', content: `<?= $str_transforms ?? null ?>`},
                {title: 'Encodes ‚ö†', content: `<?= $str_encodes ?? null ?>`},
                {title: 'Search & Compare ‚ö†', content: `<?= $str_search_compare ?? null ?>`},
                // substrings
                {title: 'Extracting ‚ö†', content: `<?= $str_extracting ?? null ?>`},
                {title: 'Phonetic ‚ö†', content: `<?= $str_phonetic ?? null ?>`},
                {title: 'Formatting ‚ö†', content: `<?= $str_formatting ?? null ?>`},
                {title: 'Heredoc/Nowdoc ‚ö†', content: `<?= $str_heredoc_nowdoc ?? null ?>`},
                {title: 'Word & Char Count ‚ö†', content: `<?= $str_word_char_count ?? null ?>`},
            ];

            $scope.tabs = tabs;
            $scope.selectedIndex = 0;
            $scope.$watch('selectedIndex', function (newVal, oldVal) {
                previous = selected;
                selected = tabs[newVal];
                if (oldVal + 1 && !angular.equals(oldVal, newVal)) {
                    $log.log('Goodbye ' + previous.title + '!');
                }
                if (newVal + 1 > 0) {
                    $log.log('Hello ' + selected.title + '!');
                }
            });
        }

        // 0%
        // topics sort of done (needs more work)
        function TestingCtrl($scope, $log) {
            let tabs = [
                {title: 'Testing Intro ‚ö†', content: 'hi world'},
                {title: 'Data Providers ‚ö†', content: 'hi world'},
                {title: 'Assertions ‚ö†', content: 'hi world'},
                {title: 'Unit Tests ‚ö†', content: 'hi world'},
                {title: 'Functional Tests ‚ö†', content: 'hi world'},
                {title: 'End to End Tests ‚ö†', content: 'hi world'},
                {title: 'Integration Tests ‚ö†', content: 'hi world'},
                {title: 'Setups & Configs ‚ö†', content: 'hi world'},
                {title: 'TDD ‚ö†', content: 'hi world'},
                {title: 'BDD ‚ö†', content: 'hi world'},
            ];
            let selected = null;
            let previous = null;

            $scope.tabs = tabs;
            $scope.selectedIndex = 0;
            $scope.$watch('selectedIndex', function (newVal, oldVal) {
                previous = selected;
                selected = tabs[newVal];
                if (oldVal + 1 && !angular.equals(oldVal, newVal)) {
                    $log.log('Goodbye ' + previous.title + '!');
                }
                if (newVal + 1 > 0) {
                    $log.log('Hello ' + selected.title + '!');
                }
            });
        }

        // 0%
        // topics done, files done, struct done, bindings done
        function WebCtrl($scope, $log) {
            let tabs = [
                {title: 'Web Intro ‚ö†', content: `<?= $web_intro ?? null ?>`},
                {title: 'HTTP Requests/Responses ‚ö†', content: `<?= $web_http_requests_responses ?? null ?>`},
                {title: 'Sessions ‚ö†', content: `<?= $web_sessions ?? null ?>`},
                {title: 'File Uploads ‚ö†', content: `<?= $web_file_uploads ?? null ?>`},
                {title: 'HTML Forms ‚ö†', content: `<?= $web_html_forms ?? null ?>`},
                {title: 'Super Globals ‚ö†', content: `<?= $web_super_globals ?? null ?>`},
                {title: 'Network Functions ‚ö†', content: `<?= $web_network_functions ?? null ?>`},
                {title: 'Encode & Decode ‚ö†', content: `<?= $web_encode_decode ?? null ?>`},
                {title: 'HTTP Authentication ‚ö†', content: `<?= $web_http_authentication ?? null ?>`},
                {title: 'Output Buffer ‚ö†', content: `<?= $web_output_buffer ?? null ?>`},
            ];
            let selected = null;
            let previous = null;

            $scope.tabs = tabs;
            $scope.selectedIndex = 0;
            $scope.$watch('selectedIndex', function (newVal, oldVal) {
                previous = selected;
                selected = tabs[newVal];
                if (oldVal + 1 && !angular.equals(oldVal, newVal)) {
                    $log.log('Goodbye ' + previous.title + '!');
                }
                if (newVal + 1 > 0) {
                    $log.log('Hello ' + selected.title + '!');
                }
            });
        }
    })();
</script>

</body>
</html>